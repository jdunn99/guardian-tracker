import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";
import React from "react";
import { Nav } from "@/components/nav";
import { $http } from "@/lib/bungie";
import {
  getDestinyManifest,
  getDestinyManifestComponent,
} from "bungie-api-ts/destiny2";
import fs from "fs";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

async function buildManifest() {
  const manifestResponse = await getDestinyManifest($http);
  const manifest = await getDestinyManifestComponent($http, {
    destinyManifest: manifestResponse.Response,
    language: "en",
    tableName: "DestinyInventoryItemDefinition",
  });

  const temp = {} as any;

  for (const key in manifest) {
    if (manifest.hasOwnProperty(key)) {
      const item = manifest[key];

      if (item.displayProperties.name === "") {
        continue;
      }

      temp[key] = {
        displayProperties: item.displayProperties,
        tooltipNotifications: item.tooltipNotifications,
        defaultDamageType: item.defaultDamageType,
      };
    }
  }

  fs.writeFile(
    "inventoryManifest.json",
    JSON.stringify(temp, null, 2),
    (err) => {
      if (err) throw err;
      console.log("Data written successfully");
    }
  );
}

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body className={inter.className}>
        {/* <Nav /> */}
        {children}
      </body>
    </html>
  );
}
